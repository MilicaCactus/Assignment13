{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["const box: NodeListOf<HTMLDivElement> = document.querySelectorAll(\".box\");\r\nconst statusText: HTMLHeadingElement = document.querySelector(\"#statusText\")!;\r\nconst restartBtn: HTMLButtonElement = document.querySelector(\"#restartButton\")!;\r\n\r\nconst winConditions: number[][] = [\r\n    [0, 1, 2],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n];\r\n\r\nlet options: string[] = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\nlet currentPlayer: string = \"X\";\r\nlet running: boolean = false;\r\n\r\ninitializeGame();\r\n\r\nfunction initializeGame(): void {\r\n    loadGameState();\r\n    box.forEach(box => box.addEventListener(\"click\", boxClicked));\r\n    restartBtn.addEventListener(\"click\", restartGame);\r\n    statusText.textContent = `${currentPlayer}'s turn`;\r\n    running = true;\r\n    updateHoverEffect()\r\n}\r\nfunction boxClicked(this: HTMLDivElement): void {\r\n    const boxIndex: string | null = this.getAttribute(\"data-boxindex\");\r\n\r\n    if (boxIndex === null || options[+boxIndex] !== \"\" || !running) {\r\n        return;\r\n    }\r\n\r\n    updateBox(this, +boxIndex);\r\n    checkWinner();\r\n}\r\nfunction updateBox(cell: HTMLDivElement, index: number): void {\r\n    options[index] = currentPlayer;\r\n    cell.textContent = currentPlayer;\r\n    cell.setAttribute(\"data-filed\", \"true\")\r\n    cell.removeAttribute(\"data-hover\");\r\n    saveGameState();\r\n}\r\nfunction changePlayer(): void {\r\n    currentPlayer = currentPlayer === \"X\" ? \"O\" : \"X\";\r\n    statusText.textContent = `${currentPlayer}'s turn`;\r\n    updateHoverEffect();\r\n    saveGameState();\r\n}\r\nfunction checkWinner(): void {\r\n    let roundWon: boolean = false;\r\n\r\n    for (let i = 0; i < winConditions.length; i++) {\r\n        const condition: number[] = winConditions[i];\r\n        const boxA: string = options[condition[0]];\r\n        const boxB: string = options[condition[1]];\r\n        const boxC: string = options[condition[2]];\r\n\r\n        if (boxA === \"\" || boxB === \"\" || boxC === \"\") {\r\n            continue;\r\n        }\r\n        if (boxA === boxB && boxB === boxC) {\r\n            roundWon = true;\r\n            break;\r\n        }\r\n    }\r\n    if (roundWon) {\r\n        statusText.textContent = `${currentPlayer} wins!!!`;\r\n        running = false;\r\n        clearGameState();\r\n    } else if (options.some(box => box === \"\")) {\r\n      changePlayer();\r\n    } else {\r\n        statusText.textContent = `its a draw!!!`;\r\n        running = false;\r\n        clearGameState\r\n    }\r\n}\r\nfunction restartGame(): void {\r\n    currentPlayer = \"X\";\r\n    options = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\r\n    statusText.textContent = `${currentPlayer}'s turn`;\r\n    box.forEach(box => {\r\n        box.textContent = \"\";\r\n        box.removeAttribute(\"data-filled\");\r\n    });\r\n    running = true;\r\n    updateHoverEffect();\r\n    clearGameState();\r\n}\r\nfunction updateHoverEffect(): void {\r\n    box.forEach(cell =>{\r\n    if (!cell.textContent) {\r\n        cell.setAttribute(\"data-hover\", currentPlayer);\r\n    }else {\r\n        cell.removeAttribute(\"data-hover\");\r\n    }\r\n    });\r\n}\r\nfunction saveGameState(): void {\r\n    localStorage.setItem(\"ticTacToeOptions\", JSON.stringify(options));\r\n    localStorage.setItem(\"ticTacToeCurrentPlayer\", currentPlayer);\r\n    localStorage.setItem(\"ticTacToeRunning\", JSON.stringify(running));\r\n}\r\n\r\nfunction loadGameState(): void {\r\n    const savedOptions = localStorage.getItem(\"ticTacToeOptions\");\r\n    const savedCurrentPlayer = localStorage.getItem(\"ticTacToeCurrentPlayer\");\r\n    const savedRunning = localStorage.getItem(\"ticTacToeRunning\");\r\n\r\n    if (savedOptions && savedCurrentPlayer && savedRunning) {\r\n        options = JSON.parse(savedOptions);\r\n        currentPlayer = savedCurrentPlayer;\r\n        running = JSON.parse(savedRunning);\r\n\r\n        box.forEach((cell, index) => {\r\n            cell.textContent = options[index];\r\n            if (options[index]) {\r\n                cell.setAttribute(\"data-filled\", \"true\");\r\n            } else {\r\n                cell.removeAttribute(\"data-filled\");\r\n            }\r\n        });\r\n        statusText.textContent = `${currentPlayer}'s turn`;\r\n        updateHoverEffect();\r\n    }\r\n}\r\n\r\nfunction clearGameState(): void {\r\n    localStorage.removeItem(\"ticTacToeOptions\");\r\n    localStorage.removeItem(\"ticTacToeCurrentPlayer\");\r\n    localStorage.removeItem(\"ticTacToeRunning\");\r\n}\r\n"],
  "mappings": "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",
  "names": ["box"]
}
